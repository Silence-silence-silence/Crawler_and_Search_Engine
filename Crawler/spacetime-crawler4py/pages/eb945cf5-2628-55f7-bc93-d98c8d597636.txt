http://www.ics.uci.edu/~kay/scheme/restaurants2.scm
restaurant -> 13 
collection -> 86 
program -> 2 
version -> 2 
using -> 3 
high -> 1 
order -> 1 
functions -> 1 
david -> 1 
kay -> 1 
fall -> 1 
2004 -> 1 
ics -> 1 
uc -> 1 
irvine -> 1 
this -> 2 
compatible -> 1 
drscheme -> 1 
intermediate -> 1 
student -> 1 
lambda -> 24 
requires -> 1 
simple -> 1 
text -> 1 
io -> 1 
ss -> 1 
teachpack -> 1 
top -> 1 
level -> 1 
application -> 1 
routines -> 1 
restaurants -> 14 
anything -> 4 
don -> 6 
care -> 6 
side -> 7 
effects -> 1 
printing -> 2 
main -> 1 
driver -> 1 
function -> 2 
call -> 1 
get -> 20 
started -> 1 
see -> 1 
end -> 1 
definitions -> 1 
define -> 28 
local -> 4 
make -> 13 
begin -> 9 
handle -> 10 
commands -> 11 
display -> 33 
thank -> 1 
good -> 1 
bye -> 1 
newline -> 19 
take -> 4 
process -> 1 
according -> 1 
user -> 8 
return -> 11 
possibly -> 1 
changed -> 2 
response -> 16 
menu -> 4 
cond -> 4 
equal -> 7 
add -> 4 
rrant -> 39 
info -> 4 
remove -> 8 
test -> 24 
name -> 17 
print -> 14 
search -> 13 
change -> 11 
prices -> 5 
percentage -> 4 
else -> 4 
invalid -> 4 
command -> 6 
symbol -> 3 
prompt -> 4 
read -> 3 
choose -> 1 
one -> 3 
new -> 2 
selected -> 1 
erase -> 1 
dishes -> 1 
served -> 2 
quit -> 1 
effect -> 6 
informative -> 1 
error -> 1 
message -> 1 
incorrect -> 1 
sorry -> 1 
isn -> 1 
valid -> 1 
please -> 3 
try -> 1 
string -> 6 
boolean -> 5 
input -> 6 
phrase -> 2 
describing -> 1 
predicate -> 2 
tests -> 1 
append -> 1 
list -> 12 
listof -> 1 
rrants -> 1 
rl -> 2 
passing -> 1 
we -> 2 
calling -> 1 
pass -> 4 
true -> 3 
adjust -> 2 
number -> 3 
specified -> 1 
select -> 1 
every -> 1 
price -> 7 
cuisine -> 4 
phone -> 5 
dish -> 6 
100 -> 1 
abstract -> 2 
data -> 3 
type -> 3 
object -> 1 
struct -> 1 
create -> 1 
when -> 1 
machine -> 1 
asks -> 1 
supply -> 1 
non -> 1 
numeric -> 1 
information -> 2 
surrounded -> 1 
quotation -> 1 
marks -> 1 
kind -> 1 
food -> 1 
ph -> 2 
best -> 2 
readably -> 1 
exact -> 1 
inexact -> 1 
represent -> 1 
lisp -> 1 
now -> 2 
representation -> 1 
perhaps -> 1 
binary -> 1 
tree -> 2 
sorted -> 1 
empty -> 9 
added -> 1 
cons -> 5 
made -> 3 
first -> 7 
rest -> 6 
not -> 1 
except -> 1 
action -> 5 
our -> 1 
may -> 1 
always -> 1 
implemented -> 1 
maybe -> 1 
instead -> 1 
but -> 1 
can -> 1 
just -> 1 
generally -> 1 
useful -> 1 
output -> 1 
routine -> 1 
expression -> 2 
plus -> 1 
enter -> 2 
enters -> 1 
note -> 1 
returns -> 1 
scheme -> 1 
multiple -> 1 
expressions -> 1 
will -> 1 
saved -> 1 
causing -> 1 
problems -> 1 
